name: Vulkan Win64 ARM64

on:
  push:
    branches-ignore:
      - main
      - beta
      - vulkan
      
jobs:
  ###################################
  #                                 #
  # FULL BUILDS                     #
  #                                 #
  ###################################
  windows-vulkan-full-build:
    runs-on: windows-11-arm

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup environment (ARM64 native)
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: arm64

    - name: Install Visual C++ Redistributable 2022 (ARM64)
      run: |
        $vc_redist_url_2022_arm64 = "https://aka.ms/vs/17/release/vc_redist.arm64.exe"
        Invoke-WebRequest -Uri $vc_redist_url_2022_arm64 -OutFile vc_redist_2022.arm64.exe
        Start-Process vc_redist_2022.arm64.exe -ArgumentList "/install", "/quiet", "/norestart" -Wait
      shell: powershell
  
    # - name: Install Visual C++ Redistributable 2022
    #   run: |
    #     $vc_redist_url_2022 = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
    #     Invoke-WebRequest -Uri $vc_redist_url_2022 -OutFile vc_redist_2022.x64.exe
    #     Start-Process vc_redist_2022.x64.exe -ArgumentList "/install", "/quiet", "/norestart" -Wait
    #   shell: powershell
      
    # Install Vulkan SDK
    - name: Install Vulkan
      run: |
        ./etc/windows/install_vulkan.sh
      shell: bash
      
    - name: Synchronize clock
      shell: cmd
      run: |
        w32tm /config /manualpeerlist:time.windows.com /syncfromflags:manual /reliable:YES /update
        net stop w32time
        net start w32time
        w32tm /resync /rediscover
            
    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        update: true
        path-type: inherit
        msystem: CLANGARM64  # works but incompatible with MSVC
        install: >-
          base-devel
          # mingw-w64-clang-aarch64-toolchain

    - name: Create msys_cmd.bat wrapper
      run: |
        echo @echo off > C:\msys64\msys2_cmd.bat
        echo "set MSYS2_PATH_TYPE=inherit" >> C:\msys64\msys2_cmd.bat
        echo "set MSYS2_NOSTART=yes" >> C:\msys64\msys2_cmd.bat
        echo "set CHERE_INVOKING=enabled_from_arguments" >> C:\msys64\msys2_cmd.bat
        echo "C:\msys64\usr\bin\bash.exe %*" >> C:\msys64\msys2_cmd.bat
          
    - name: Get machine name
      run: |
        echo "Machine name: $RUNNER_NAME"
    
    # Install Vulkan SDK
    - name: Install Vulkan SDK
      if: github.ref_name == 'vulkan'
      run: |

        . ./etc/windows/install_vulkan.sh
        
        # Persist environment variables for subsequent steps
        echo "VULKAN_SDK=$VULKAN_SDK" >> $GITHUB_ENV
        echo "${VULKAN_SDK}/bin" >> $GITHUB_PATH

    - name: Setup environment
      run: mkdir -p ssh
      
    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
        
    - name: Decode FLTK SSH key
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.FLTK_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          
    - name: Set permissions on SSH key
      shell: cmd
      run: |
        icacls "ssh\id_rsa" /inheritance:r /grant:r "%USERNAME%:R"
        
    - name: Add SourceForge to known_hosts
      shell: bash
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan frs.sourceforge.net >> ~/.ssh/known_hosts
      
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh ./bin/release/*.sh
        
    - name: Install MSYS2 Dependencies
      run: |
        pacman -S --noconfirm nasm rsync

    # No wmic on arm64
    # - name: List disk space
    #   shell: cmd
    #   run: |
    #     wmic logicaldisk get freespace, size, caption
      
    - name: Build vmrv2
      run: |
        ./etc/runme_nolog.sh -v -t package -vk
        
    - name: Upload binaries  # Conditional step
      run: |
        ./bin/release/upload_sourceforge.sh -vk

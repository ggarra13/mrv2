name: Minimal Builds

on: [push]

jobs:
  # linux-minimal-build:
  #   runs-on: ubuntu-20.04

  #   steps:
    
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: recursive
        
  #   - name: Update
  #     run: sudo apt-get update

  #   - name: Install OpenGL dev
  #     run: sudo apt-get install -y xorg-dev libglu1-mesa-dev mesa-common-dev

  #   - name: Install X11 dev
  #     run: sudo apt-get install -y libx11-dev libxcursor-dev libxinerama-dev

  #   - name: Install ALSA dev
  #     run: sudo apt-get install -y libasound2-dev

  #   - name: Install PulseAudio dev
  #     run: sudo apt-get install -y libpulse-dev

  #   - name: Install Pango dev
  #     run: sudo apt-get install -y libpango1.0-dev

  #   - name: Install Wayland
  #     run: sudo apt-get install -y libwayland-dev wayland-protocols libdbus-1-dev libxkbcommon-dev libegl-dev libgtk-3-dev

  #   - name: Install openssl
  #     run: sudo apt-get install -y openssl
      
  #   - name: Install ninja-build
  #     run: sudo apt-get install -y ninja-build
      
  #   - name: Install gettext
  #     run: sudo apt-get install -y gettext
      
  #   - name: Install python dependencies
  #     run: sudo apt-get install -y libssl-dev libffi-dev

  #   - name: Synchronize clock
  #     run: |
  #       sudo apt-get install -y ntp
  
  #   - name: Setup environment
  #     run: mkdir -p ssh

  #   - name: Decode SSH key
  #     run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
  #     shell: bash
  
  #   - name: Set permissions on SSH key
  #     run: chmod 600 ssh/id_rsa
      
  #   - name: Set executable permissions
  #     run: |
  #       chmod +x ./*.sh ./bin/*.sh ./etc/*.sh
  
  #   - name: Build mrv2
  #     run: |
  #       ./bin/runme_minimal.sh -y


  # windows-minimal-build:
  #   runs-on: windows-2019

  #   defaults:
  #     run:
  #       shell: msys2 {0}

  #   steps:

  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: recursive

  #   - name: Setup environment
  #     uses: ilammy/msvc-dev-cmd@v1

  #   - name: Setup MSYS
  #     uses: msys2/setup-msys2@v2
  #     with:
  #       update: true
  #       path-type: inherit

  #   - name: Synchronize clock
  #     shell: cmd
  #     run: |
  #       w32tm /config /manualpeerlist:time.windows.com /syncfromflags:manual /reliable:YES /update
  #       net stop w32time
  #       net start w32time
  #       w32tm /resync /rediscover
        
  #   - name: Setup environment
  #     run: mkdir -p ssh

  #   - name: Decode SSH key
  #     run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
  #     shell: bash

  #   - name: Set permissions on SSH key
  #     shell: cmd
  #     run: |
  #       icacls "ssh\id_rsa" /inheritance:r /grant:r "%USERNAME%:R"
        
  #   - name: Set executable permissions
  #     run: |
  #       chmod +x ./*.sh ./bin/*.sh ./etc/*.sh
      
  #   - name: Build mrv2
  #     run: |
  #       ./bin/runme_minimal.sh -y


  macos-minimal-build:
    runs-on: macos-13

    steps:
    
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Get machine name
      run: |
        echo "Machine name: $RUNNER_NAME"

    - name: Install ninja-build
      run: brew install ninja
      
    - name: Install automake
      run: brew install automake curl rsync

    - name: Install GNU sed
      run: brew install gnu-sed
      
    - name: Install Python dependencies
      run: brew install libb2 libffi readline sqlite3 xz zlib
        
    - name: Install pyFLTK dependencies
      run: brew install swig

    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
  
    - name: Set permissions on SSH key
      run: chmod 600 ssh/id_rsa
        
    - name: Decode FLTK SSH key
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.FLTK_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Add SourceForge to known_hosts
      run: ssh-keyscan frs.sourceforge.net >> ~/.ssh/known_hosts

    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh ./bin/release/*.sh


  # macos-m1-minimal-build:
  #   runs-on: macos-14

  #   steps:
    
  #   - uses: actions/checkout@v4
  #     with:
  #       submodules: recursive

  #   - name: Install ninja-build
  #     run: brew install ninja
      
  #   - name: Install automake
  #     run: brew install automake

  #   - name: Install GNU sed
  #     run: brew install gnu-sed
      
  #   - name: Install Python dependencies
  #     run: brew install libffi openssl readline sqlite3 xz zlib

  #   - name: Setup environment
  #     run: mkdir -p ssh

  #   - name: Decode SSH key
  #     run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
  #     shell: bash
  
  #   - name: Set permissions on SSH key
  #     run: chmod 600 ssh/id_rsa
        
  #   - name: Set executable permissions
  #     run: |
  #       chmod +x ./*.sh ./bin/*.sh ./etc/*.sh

    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -D TLRENDER_USD=OFF -t package
      
    - name: Upload binaries
      if: github.ref_name == 'beta'
      run: |
        ./bin/release/upload_sourceforge.sh

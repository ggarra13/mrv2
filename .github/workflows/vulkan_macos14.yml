name: MacOS M1 Vulkan

on:
  push:
    branches-ignore:
      - main
      - beta

jobs:
  ###################################
  #                                 #
  # FULL BUILDS                     #
  #                                 #
  ###################################
  macos-14-full-build:
    runs-on: macos-14

    env:
      CMAKE_OSX_DEPLOYMENT_TARGET: 14.0
      
    steps:
    
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Get machine name
      run: |
        echo "Machine name: $RUNNER_NAME"

    - name: Install ninja-build
      run: brew install ninja
      
    - name: Install automake
      run: brew install automake curl rsync

    - name: Install GNU sed
      run: brew install gnu-sed
      
    - name: Install Python dependencies
      run: brew install libb2 libffi readline sqlite3 xz zlib
      
    - name: Reinstall xz to avoid broken macOS 14
      run: brew reinstall xz
        
    - name: Install pyFLTK dependencies
      run: brew install swig
      
        
    # Download and install Vulkan SDK with MoltenVK
    - name: Install Vulkan SDK
      run: |
        brew install vulkan-loader
        brew install molten-vk
        brew install vulkan-tools
        brew install shaderc
        brew install glslc
        brew install vulkan-profiles
        brew install spirv-tools
        
        export VULKAN_SDK=/usr/local/
        echo "VULKAN_SDK=${VULKAN_SDK}" >> $GITHUB_ENV
        echo "DYLD_LIBRARY_PATH=${VULKAN_SDK}/lib:$DYLD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "VK_ICD_FILENAMES=${VULKAN_SDK}/share/vulkan/icd.d/MoltenVK_icd.json" >> $GITHUB_ENV
        echo "${VULKAN_SDK}/bin" >> $GITHUB_PATH


    # Verify Vulkan installation
    - name: Verify Vulkan
      run: |
        echo "VULKAN_SDK: $VULKAN_SDK"
        echo "PATH: $PATH"
        echo "DYLD_LIBRARY_PATH: $DYLD_LIBRARY_PATH"
        vulkaninfo --summary
        
    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
  
    - name: Set permissions on SSH key
      run: chmod 600 ssh/id_rsa

    - name: Decode FLTK SSH key
      run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.FLTK_DEPLOY_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
    - name: Add SourceForge to known_hosts
      run: ssh-keyscan frs.sourceforge.net >> ~/.ssh/known_hosts

    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh ./bin/release/*.sh

    # - name: Install cmake
    #   run: |
    #     ./etc/install_cmake.sh

    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -t package -vk

    - name: Upload binaries  # Conditional step
      if: github.ref_name == 'beta'
      run: |
        ./bin/release/upload_sourceforge.sh

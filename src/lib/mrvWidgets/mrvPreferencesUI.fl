# data file for the Fltk User Interface Designer (fluid)
version 1.0500
i18n_type 1
i18n_include {<libintl.h>}
i18n_conditional {}
i18n_gnu_function _
i18n_gnu_static_function _
header_name {.h}
code_name {.cxx}
include_guard {}
decl {\#include <FL/fl_ask.H>} {public global
}

decl {\#include <FL/Fl_Color_Chooser.H>} {public global
}

decl {\#include <FL/Fl_Scheme_Choice.H>} {public global
}

decl {\#ifdef TLRENDER_AUDIO} {private local
}

decl {\#include <rtaudio/RtAudio.h>} {private local
}

decl {\#endif} {private local
}

decl {\#include <tlCore/Time.h>} {public global
}

decl {\#include "mrvCore/mrvEnv.h"} {public global
}

decl {\#include "mrvCore/mrvFonts.h"} {public global
}

decl {\#include "mrvCore/mrvI8N.h"} {public global
}

decl {\#include "mrViewer.h"} {public global
}

decl {\#include "make_ocio_chooser.h"} {public global
}

decl {\#include "mrvWidgets/mrvPopupMenu.h"} {public global
}

decl {\#include "mrvWidgets/mrvPreferencesTree.h"} {public global
}

decl {\#include "mrvFl/mrvOCIO.h"} {private global
}

decl {\#include "mrvFl/mrvFileRequester.h"} {public global
}

decl {\#include "mrvWidgets/mrvOCIOBrowser.h"} {public global
}

decl {\#include "mrvWidgets/mrvChoice.h"} {public global
}

decl {\#include "mrvWidgets/mrvButton.h"} {public global
}

decl {\#include "mrvWidgets/mrvPathMappingBrowser.h"} {public global
}

decl {\#include "mrvWidgets/mrvBrowser.h"} {public global
}

decl {\#include "mrvFl/mrvPathMapping.h"} {public global
}

decl {\#include "mrvFl/mrvPreferences.h"} {public global
}

decl {\#include "mrvCore/mrvPathMapping.h"} {public global
}

decl {\#include "mrvCore/mrvMedia.h"} {public global
}

class PreferencesUI {open
} {
  decl {ViewerUI* main;} {private local
  }
  Function {make_window(ViewerUI* m)} {open private
  } {
    Fl_Window uiMain {
      label Preferences
      user_data this user_data_type {PreferencesUI*}
      callback {o->hide();} open
      xywh {0 0 853 466} type Double hide resizable
      code0 {main = m;}
    } {
      Fl_Group {} {open
        xywh {0 0 853 466} box FLAT_BOX
      } {
        Fl_Group {} {open
          xywh {283 28 570 428}
        } {
          Fl_Wizard uiWizard {
            label Settings open
            xywh {283 28 570 380} box PLASTIC_UP_BOX labelcolor 32
          } {
            Fl_Group {} {
              label {User Interface}
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label {Window Behavior} open
                xywh {293 61 545 164} box ROUNDED_BOX
              } {
                Fl_Check_Button uiPrefsAlwaysOnTop {
                  label {Always on Top}
                  tooltip {When selected, mrv2's window will always show up on top of other windows on the desktop.} xywh {317 71 25 25} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsSecondaryOnTop {
                  label {Secondary on Top}
                  tooltip {When selected, mrv2's window will always show up on top of other windows on the desktop.} xywh {317 101 25 25} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsSingleInstance {
                  label {Single Instance}
                  tooltip {When selected, only a single mrv2 instance is allowed.
If you try to open several mrv2s with different images, all these images will be sent to the already open mrv2.} xywh {317 131 25 25} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsAutoFitImage {
                  label {Auto Refit Image}
                  tooltip {When selected, mrv2 will apply a fit image operation on each video played.  This effectively means the video will be resized automatically based on the size of the window.} xywh {317 161 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                }
                Fl_Check_Button uiPrefsRaiseOnEnter {
                  label {Raise on Enter}
                  tooltip {When selected, mrv2 will raise the window to the front once you enter the view window.} xywh {317 190 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                }
                Fl_Group uiPrefsOpenMode {open
                  xywh {632 73 196 142} box UP_BOX
                } {
                  Fl_Round_Button {} {
                    label Normal
                    tooltip {When selected, mrv2 will resize its window to the first image.} xywh {644 86 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX value 1 align 8
                  }
                  Fl_Round_Button {} {
                    label Fullscreen
                    tooltip {When selected, mrv2 will start in full screen mode.} xywh {644 116 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                  }
                  Fl_Round_Button {} {
                    label Presentation
                    tooltip {When selected, mrv2 will start in presentation mode.} xywh {644 146 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                  }
                  Fl_Round_Button {} {
                    label Maximized
                    tooltip {When selected, mrv2 will start in a maximized window.} xywh {644 176 25 26} type Radio box ROUND_UP_BOX down_box ROUND_DOWN_BOX align 8
                  }
                }
              }
              Fl_Group {} {
                label {UI Elements}
                xywh {293 247 545 140} box ROUNDED_BOX
              } {
                Fl_Check_Button uiPrefsMenuBar {
                  label {Menu Bar}
                  tooltip {When selected, mrv2 will start with the menu bar already shown.} xywh {423 261 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                }
                Fl_Check_Button uiPrefsTopbar {
                  label Topbar
                  tooltip {When selected, mrv2 will start with its channel, gain, gamma toolbar visible.} xywh {424 289 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                }
                Fl_Check_Button uiPrefsPixelToolbar {
                  label {Pixel Toolbar}
                  tooltip {When selected, mrv2 will start with the pixel toolbar shown.} xywh {424 319 25 25} box UP_BOX down_box DOWN_BOX value 1 align 8
                }
                Fl_Check_Button uiPrefsTimeline {
                  label Timeline
                  tooltip {When selected, mrv2 will start with the timeline shown.} xywh {424 347 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                }
                Fl_Check_Button uiPrefsStatusBar {
                  label {Status Bar}
                  tooltip {When selected, mrv2 will start with the status bar visible.} xywh {599 319 25 25} box UP_BOX down_box DOWN_BOX value 1 align 136
                }
                Fl_Check_Button uiPrefsMacOSMenus {
                  label {macOS Menus}
                  tooltip {This is a macOS setting only.  When selected the menus will appear on the system toolbar instead of the mrv2 toolbar.} xywh {598 260 25 25} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsToolBar {
                  label {Tool Dock}
                  tooltip {When selected, mrv2 will start with the action tool dock already open.} xywh {598 291 25 25} box UP_BOX down_box DOWN_BOX align 136
                }
                Fl_Check_Button uiPrefsOnePanelOnly {
                  label {Only One Panel}
                  tooltip {When selected, mrv2 will start with the only one panel option selected.} xywh {599 347 25 25} box UP_BOX down_box DOWN_BOX align 136
                }
              }
            }
            Fl_Group {} {
              label {View Window}
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Defaults open
                xywh {298 67 531 162} box ROUNDED_BOX
              } {
                Fl_Value_Input uiPrefsViewGain {
                  label Gain
                  tooltip {Sets the default gain when mrv2 starts.} xywh {403 84 80 25} maximum 64 value 1 textcolor 56
                }
                Fl_Value_Input uiPrefsViewGamma {
                  label Gamma
                  tooltip {Sets the default gamma when mrv2 starts.} xywh {685 84 60 25} maximum 4 value 1 textcolor 56
                }
                Fl_Choice uiPrefsCropArea {
                  label Crop
                  user_data this user_data_type {PreferencesUI*}
                  tooltip {Allows you to select a standard cropping area around image.} xywh {333 133 155 25} box THIN_DOWN_BOX down_box BORDER_BOX align 1
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label {0.00 None}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.00 Square}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.19 Movietone}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.37 Academy (Full Frame)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.50 Still Photo}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.56 STV - HDTV (14:9)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.66 European Widescreen}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.77 HDTV (16:9)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {1.85 Widescreen (3-perf)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {2.00 Univisium}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {2.10 VistaVision}
                    xywh {15 15 100 20}
                  }
                  MenuItem {} {
                    label {2.20 70mm}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {2.35 CinemaScope (old 2.35)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {2.39 Panavision (new 2.35)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {4.00 Polyvision}
                    xywh {5 5 100 20}
                  }
                }
                Fl_Check_Button uiPrefsAutoFrame {
                  label {Auto Frame}
                  user_data this user_data_type {PreferencesUI*}
                  tooltip {When this is on, View/Auto Frame will be active.} xywh {685 126 20 20} box UP_BOX down_box DOWN_BOX align 4
                }
                Fl_Check_Button uiPrefsSafeAreas {
                  label {Safe Areas}
                  user_data this user_data_type {PreferencesUI*}
                  tooltip {When mrv2 starts, the safe area display will be active by default.} xywh {685 159 20 20} box UP_BOX down_box DOWN_BOX align 4
                }
                Fl_Check_Button uiPrefsOCIOInTopBar {
                  label {OCIO in Top Bar}
                  user_data this user_data_type {PreferencesUI*}
                  tooltip {When mrv2 starts, OCIO should start in the top bar instead of color adjustments.} xywh {685 192 20 21} box UP_BOX down_box DOWN_BOX align 4
                }
                Fl_Choice uiPrefsZoomSpeed {
                  label {Zoom Speed}
                  xywh {333 188 90 25} down_box BORDER_BOX align 1
                } {
                  MenuItem {} {
                    label Slow
                    xywh {10 10 30 20}
                  }
                  MenuItem {} {
                    label Medium
                    xywh {20 20 30 20}
                  }
                  MenuItem {} {
                    label Fast
                    xywh {30 30 30 20}
                  }
                }
              }
              Fl_Group uiPrefsHud {
                label HUD
                user_data this user_data_type {PreferencesUI*}
                tooltip {This area specifies which elements should be shown as a HUD overlay on the view screen.} xywh {303 249 524 126} box UP_BOX
              } {
                Fl_Check_Button uiPrefsHudFilename {
                  label Filename
                  user_data this user_data_type {PreferencesUI*}
                  xywh {338 289 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudDirectory {
                  label Directory
                  user_data this user_data_type {PreferencesUI*}
                  xywh {338 259 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudFrame {
                  label Frame
                  user_data this user_data_type {PreferencesUI*}
                  xywh {338 319 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudFrameRange {
                  label {Frame Range}
                  user_data this user_data_type {PreferencesUI*}
                  xywh {483 319 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudFrameCount {
                  label {Frame Count}
                  user_data this user_data_type {PreferencesUI*}
                  xywh {653 289 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudResolution {
                  label Resolution
                  user_data this user_data_type {PreferencesUI*}
                  xywh {483 259 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudTimecode {
                  label Timecode
                  user_data this user_data_type {PreferencesUI*}
                  xywh {653 321 20 18} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudFPS {
                  label FPS
                  user_data this user_data_type {PreferencesUI*}
                  xywh {483 289 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudMemory {
                  label Memory
                  user_data this user_data_type {PreferencesUI*}
                  xywh {337 347 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudCache {
                  label Cache
                  user_data this user_data_type {PreferencesUI*}
                  xywh {483 348 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
                Fl_Check_Button uiPrefsHudAttributes {
                  label Attributes
                  user_data this user_data_type {PreferencesUI*}
                  xywh {653 259 20 20} box UP_BOX down_box DOWN_BOX align 8
                }
              }
            }
            Fl_Group {} {
              label {File Requester}
              xywh {288 38 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label {File Requester} open
                xywh {313 63 500 316} box ROUNDED_BOX
              } {
                Fl_Check_Button uiPrefsFileReqFolder {
                  label {Single Click to Travel Drawers}
                  tooltip {When using mrv2's file chooser, a single click on a folder will open it.} xywh {413 130 25 27} box UP_BOX down_box DOWN_BOX align 136
                }
                Fl_Check_Button uiPrefsFileReqThumbnails {
                  label {Thumbnails Active}
                  tooltip {Show thumbnails for known files.} xywh {413 173 25 27} box UP_BOX down_box DOWN_BOX align 136
                }
                Fl_Check_Button uiPrefsUSDThumbnails {
                  label {USD Thumbnails}
                  tooltip {Show Thumbnails for USD files (can be slow if they are big)} xywh {413 216 25 27} box UP_BOX down_box DOWN_BOX align 136
                }
                Fl_Check_Button uiPrefsNativeFileChooser {
                  label {Use Native File Chooser}
                  tooltip {If selected, the natlve file chooser will be used.  If unselected, mrv2's standard file chooser will be used.} xywh {413 259 25 27} box UP_BOX down_box DOWN_BOX align 136
                }
              }
            }
            Fl_Group {} {
              label Fonts
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Fonts open
                xywh {364 102 403 199} box ROUNDED_BOX
              } {
                Fl_Group {} {open
                  xywh {485 164 160 75}
                } {
                  Fl_Choice uiFontMenus {
                    label Menus open
                    tooltip {Sets the font to use in menus.} xywh {485 164 160 25} down_box BORDER_BOX
                    code0 {const auto& fonts = mrv::fonts::list();}
                    code1 {for (const auto& font : fonts)}
                    code2 {o->add(font.c_str());}
                  } {}
                  Fl_Choice uiFontPanels {
                    label Panels open
                    tooltip {Sets the font to use in panels. (Not yet working)} xywh {485 214 160 25} down_box BORDER_BOX
                    code0 {const auto& fonts = mrv::fonts::list();}
                    code1 {for (const auto& font : fonts)}
                    code2 {o->add(font.c_str());}
                  } {}
                }
              }
            }
            Fl_Group {} {
              label HDR
              xywh {298 28 555 369} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label HDR open
                xywh {310 71 530 304} box ROUNDED_BOX
              } {
                Fl_Choice uiPrefsChromaticities {
                  label Chromaticities
                  xywh {526 141 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Ignore
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label Apply
                    xywh {40 40 100 20}
                  }
                }
                Fl_Choice uiPrefsHDRInfo {
                  label {HDR Data}
                  xywh {526 180 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label {From File}
                    xywh {50 50 100 20}
                  }
                  MenuItem {} {
                    label Inactive
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label Active
                    xywh {50 50 100 20}
                  }
                }
                Fl_Choice uiPrefsTonemapAlgorithm {
                  label {Tonemap Algorithm} open
                  xywh {526 219 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label ST2094_40
                    xywh {50 50 100 20}
                  }
                  MenuItem {} {
                    label ST2094_10
                    xywh {60 60 100 20}
                  }
                  MenuItem {} {
                    label Clip
                    xywh {70 70 100 20}
                  }
                  MenuItem {} {
                    label BT2390
                    xywh {80 80 100 20}
                  }
                  MenuItem {} {
                    label BT2446A
                    xywh {90 90 100 20}
                  }
                  MenuItem {} {
                    label Spline
                    xywh {100 100 100 20}
                  }
                  MenuItem {} {
                    label Reinhard
                    xywh {110 110 100 20}
                  }
                  MenuItem {} {
                    label Mobius
                    xywh {120 120 100 20}
                  }
                  MenuItem {} {
                    label Hable
                    xywh {130 130 100 20}
                  }
                  MenuItem {} {
                    label Gamma
                    xywh {130 130 100 20}
                  }
                  MenuItem {} {
                    label Linear
                    xywh {140 140 100 20}
                  }
                  MenuItem {} {
                    label {Linear Light}
                    xywh {150 150 100 20}
                  }
                  MenuItem {} {
                    label None
                    xywh {160 160 100 20}
                  }
                }
                Fl_Choice uiPrefsGamutMapping {
                  label {Gamut Mapping} open
                  xywh {526 258 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Auto
                    xywh {0 0 100 20}
                  }
                  MenuItem {} {
                    label Clip
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label Perceptual
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label Relative
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label Saturation
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label Absolute
                    xywh {50 50 100 20}
                  }
                  MenuItem {} {
                    label Desaturate
                    xywh {60 60 100 20}
                  }
                  MenuItem {} {
                    label Darken
                    xywh {70 70 100 20}
                  }
                  MenuItem {} {
                    label Highlight
                    xywh {80 80 100 20}
                  }
                  MenuItem {} {
                    label Linear
                    xywh {90 90 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label {Language and Colors}
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label UI open
                xywh {360 58 403 199} box ROUNDED_BOX
              } {
                Fl_Choice uiLanguage {
                  label Language
                  xywh {508 78 160 25} down_box BORDER_BOX
                  code0 {auto languages = mrv::getLanguages(); std::string entry;}
                  code1 {for (const auto& language : languages) { entry = _(language.c_str()); entry += " (" + language + ")"; o->add(entry.c_str()); }}
                } {}
                Fl_Choice {} {
                  label Scheme
                  xywh {522 131 100 25} down_box BORDER_BOX align 1
                  class Fl_Scheme_Choice
                } {
                  MenuItem {} {
                    label base
                    xywh {5 5 36 21}
                  }
                  MenuItem {} {
                    label plastic
                    xywh {15 15 36 21}
                  }
                  MenuItem {} {
                    label {gtk+}
                    xywh {25 25 36 21}
                  }
                  MenuItem {} {
                    label gleam
                    xywh {35 35 36 21}
                  }
                  MenuItem {} {
                    label oxy
                    xywh {45 45 36 21}
                  }
                }
                Fl_Choice uiColorTheme {
                  label {Color Theme}
                  user_data m user_data_type {ViewerUI*}
                  callback {if (!o->mvalue() || !o->mvalue()->text ) return;

Fl_Color pen_color = v->uiPenColor->color();
uint8_t pr, pg, pb;
Fl::get_color(pen_color, pr, pg, pb);

Fl_Color old_pen_color = v->uiOldPenColor->color();
uint8_t opr, opg, opb;
Fl::get_color(old_pen_color, opr, opg, opb);

mrv::Preferences::schemes.apply_colors( o->mvalue()->text );

Fl::set_color(pen_color, pr, pg, pb);
Fl::set_color(old_pen_color, opr, opg, opb);

const auto style = mrv::Preferences::schemes.getStyle();
TimelineClass* t = v->uiTimeWindow;
t->redraw();
v->uiTimeline->setStyle(style);
v->refresh();} open
                  xywh {502 178 150 25} down_box BORDER_BOX align 1
                } {}
                Fl_Button {} {
                  label {Reload Theme}
                  user_data m user_data_type {ViewerUI*}
                  callback {const Fl_Menu_Item* item = v->uiPrefs->uiColorTheme->mvalue();
mrv::Preferences::schemes.reload_theme( item->text );
v->refresh();}
                  tooltip {Reload color theme from mrv2.colors file again to refresh change in colors} xywh {512 208 135 30}
                }
              }
              Fl_Group {} {
                label View
                xywh {358 285 410 88} box ROUNDED_BOX
              } {
                Fl_Button uiPrefsViewBG {
                  label Background
                  callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Background Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                  tooltip {Selects the background color of areas outside the current image.} xywh {535 301 25 20} box EMBOSSED_BOX labelsize 11 align 4
                }
                Fl_Button uiPrefsViewTextOverlay {
                  label {Text Overlay}
                  user_data this user_data_type {PreferencesUI*}
                  callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Text Overlay Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                  tooltip {Selects the color of text overlays printed over the current image.} xywh {535 338 25 20} box EMBOSSED_BOX labelsize 11 align 4
                }
                Fl_Button uiPrefsViewSelection {
                  label Selection
                  user_data this user_data_type {PreferencesUI*}
                  callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick View Selection Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                  tooltip {Selects the color of the selection rectangle over the current image.} xywh {650 301 25 20} box EMBOSSED_BOX labelsize 11 align 4
                }
                Fl_Button uiPrefsViewHud {
                  label HUD
                  user_data this user_data_type {PreferencesUI*}
                  callback {uchar r, g, b;
Fl::get_color(o->color(),r,g,b);
if (!fl_color_chooser("Pick HUD Color", r,g,b)) return;
o->color( fl_rgb_color( r, g, b ) );
o->redraw();}
                  tooltip {Selects the color of HUD overlays.} xywh {654 338 21 20} box EMBOSSED_BOX align 4
                }
              }
            }
            Fl_Group {} {
              label {Pixel Toolbar}
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label {Pixel Toolbar} open
                xywh {298 59 530 328} box ROUNDED_BOX
              } {
                Fl_Choice uiPrefsPixelRGBA {
                  label {RGBA Display}
                  xywh {485 92 255 25} down_box BORDER_BOX align 132
                } {
                  MenuItem {} {
                    label {Float Values}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {Hex Values}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {8-bit Values}
                    xywh {5 5 100 20}
                  }
                }
                Fl_Choice uiPrefsPixelValues {
                  label {Pixel Values}
                  xywh {485 160 255 25} down_box BORDER_BOX align 132
                } {
                  MenuItem {} {
                    label {Full Lut, Gamma and Gain}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {Original without Gamma, Gain or Lut}
                    xywh {5 5 100 20}
                  }
                }
                Fl_Choice uiPrefsPixelHSV {
                  label {Secondary Display}
                  xywh {485 228 255 23} down_box BORDER_BOX align 132
                } {
                  MenuItem {} {
                    label HSV
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label HSL
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {CIE XYZ}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {CIE xyY}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {Lab CIELAB (L*a*b*)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {Luv CIELUV (L*u*v*)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {YUV (Analog PAL)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {YDbDr (Analog SECAM/PAL-N)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {YIQ (Analog NTSC)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {ITU-601 (Digital PAL/NTSC YCbCr)}
                    xywh {5 5 100 20} align 172
                  }
                  MenuItem {} {
                    label {ITU-709 (Digital HDTV YCbCr)}
                    xywh {5 5 100 20} align 172
                  }
                }
                Fl_Choice uiPrefsPixelLumma {
                  label Luminance
                  xywh {485 294 255 25} down_box BORDER_BOX align 132
                } {
                  MenuItem {} {
                    label {Y (Luminance)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {Y' (Lumma)}
                    xywh {5 5 100 20}
                  }
                  MenuItem {} {
                    label {L (Lightness)}
                    xywh {5 5 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label Positioning
              xywh {288 37 555 360} box EMBOSSED_BOX hide
            } {
              Fl_Group {} {
                label Positioning open
                xywh {300 61 530 312} box ROUNDED_BOX
              } {
                Fl_Group {} {open
                  xywh {339 86 451 278}
                } {
                  Fl_Check_Button uiAlwaysSaveOnExit {
                    label {Always Save on Exit}
                    tooltip {When this option is set, mrv2 will save its position and size upon exiting the program.} xywh {460 86 215 25} box UP_BOX down_box DOWN_BOX align 16
                  }
                  Fl_Group {} {
                    xywh {339 128 451 48} box ROUNDED_BOX
                  } {
                    Fl_Check_Button uiWindowFixedPosition {
                      label {Fixed Position}
                      tooltip {When this option is set, mrv2 will open in the position you set here (except if the window goes out of the Desktop).  If Always Save on Exit is on, the values are recakculated upon exiting the program.} xywh {350 139 215 25} box UP_BOX down_box DOWN_BOX align 16
                    }
                    Fl_Value_Input uiWindowXPosition {
                      label {X:}
                      xywh {595 139 60 25} textcolor 56
                    }
                    Fl_Value_Input uiWindowYPosition {
                      label {Y:}
                      xywh {675 139 60 25} textcolor 56
                    }
                  }
                  Fl_Group {} {open
                    xywh {339 226 451 43} box ROUNDED_BOX
                  } {
                    Fl_Check_Button uiWindowFixedSize {
                      label {Fixed Size}
                      tooltip {When this option is on, mrv2 will always open to the size you set in W and H.  If Always Save on Exit is on, the values are recalculated upon exiting the program.} xywh {350 234 215 25} box UP_BOX down_box DOWN_BOX align 16
                    }
                    Fl_Value_Input uiWindowXSize {
                      label {W:}
                      xywh {602 234 60 25} minimum 640 maximum 4096 step 1 value 640 textcolor 56
                    }
                    Fl_Value_Input uiWindowYSize {
                      label {H:}
                      xywh {682 234 60 25} minimum 480 maximum 3680 step 1 value 480 textcolor 56
                    }
                  }
                  Fl_Button {} {
                    label {Take Current Window Values}
                    user_data this user_data_type {PreferencesUI*}
                    callback {v->uiWindowXPosition->value( v->main->uiMain->x() );
v->uiWindowYPosition->value( v->main->uiMain->y() );
v->uiWindowXSize->value( v->main->uiMain->w() );
v->uiWindowYSize->value( v->main->uiMain->h() );}
                    tooltip {Fills the Fixed Position and and Fixed Size values with the current values of the viewer.  Remember to also check the boxes for Fixed Position and/or Fixed Size depending what you want to save.} xywh {345 324 445 40} align 128
                  }
                }
              }
            }
            Fl_Group {} {
              label Render
              xywh {288 35 555 369} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Render
                xywh {298 68 535 320} box ROUNDED_BOX
              } {
                Fl_Choice uiPrefsVideoLevels {
                  label {Video Levels} open
                  xywh {514 157 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label {From File}
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label {Full Range}
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label {Legal Range}
                    xywh {30 30 100 20}
                  }
                }
                Fl_Choice uiPrefsAlphaBlend {
                  label {Alpha Blend}
                  xywh {514 187 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label None
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label Straight
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label Premultiplied
                    xywh {30 30 100 20}
                  }
                }
                Fl_Choice uiPrefsMinifyFilter {
                  label {Minify Filter}
                  xywh {514 240 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Nearest
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label Linear
                    xywh {40 40 100 20}
                  }
                }
                Fl_Choice uiPrefsMagnifyFilter {
                  label {Magnify Filter}
                  xywh {514 273 135 25} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Nearest
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label Linear
                    xywh {50 50 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label Thumbnails
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Thumbnails open
                xywh {325 63 480 316} box ROUNDED_BOX
              } {
                Fl_Choice uiPrefsEditThumbnails {
                  label {Edit Viewport} open
                  tooltip {How to display timeline thumbnails by default.} xywh {398 140 175 28} box THIN_DOWN_BOX down_box BORDER_BOX align 8
                  code0 {o->value(1);}
                } {
                  MenuItem {} {
                    label None
                    xywh {35 35 100 20}
                  }
                  MenuItem {} {
                    label Small
                    xywh {35 35 100 20}
                  }
                  MenuItem {} {
                    label Medium
                    xywh {35 35 100 20}
                  }
                  MenuItem {} {
                    label Large
                    xywh {45 45 100 20}
                  }
                }
                Fl_Check_Button uiPrefsTimelineThumbnails {
                  label {Preview Thumbnails above Timeline}
                  tooltip {Preview Thumbnails in a rectangle above Timeline} xywh {398 185 370 20} down_box DOWN_BOX value 1
                }
                Fl_Check_Button uiPrefsManualPanelThumbnails {
                  label {Refresh Thumbnails on Panels Manuallly}
                  tooltip {When this option is on, thumbnails in panels won't be refreshed automatically.  You will have to use RMB->Update Thumbnail on the Thumbnail.} xywh {398 228 370 20} down_box DOWN_BOX
                }
                Fl_Check_Button uiPrefsPanelThumbnails {
                  label {Preview Thumbnails on Panels}
                  tooltip {Preview Thumbnails in Panels} xywh {398 267 370 20} down_box DOWN_BOX value 1
                }
              }
            }
            Fl_Group {} {
              label Timeline
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Timeline open
                xywh {325 63 480 316} box ROUNDED_BOX
              } {
                Fl_Group {} {
                  xywh {397 145 405 129}
                } {
                  Fl_Choice uiPrefsTimelineDisplay {
                    label Display
                    tooltip {How to display timeline by default.} xywh {397 145 405 27} box THIN_DOWN_BOX down_box BORDER_BOX
                    code0 {o->value(0);}
                  } {
                    MenuItem {} {
                      label Frames
                      xywh {15 15 100 20}
                    }
                    MenuItem {} {
                      label Seconds
                      xywh {15 15 100 20}
                    }
                    MenuItem {} {
                      label Timecode
                      xywh {15 15 100 20}
                    }
                  }
                  Fl_Check_Button uiPrefsEditMode {
                    label {Start in Edit mode}
                    tooltip {Editing viewport will be visible at start up.} xywh {397 203 15 20} down_box DOWN_BOX align 8
                  }
                  Fl_Check_Button uiPrefsRemoveEDLs {
                    label {Remove EDLs in Temporary Folder on Exit}
                    tooltip {When selected, temporary EDLs (Playlists) will be removed from the temporary folder.} xywh {397 254 370 20} down_box DOWN_BOX value 1
                  }
                }
                Fl_Value_Input uiStartTimeOffset {
                  label {Video Start Frame}
                  tooltip {Start value in the timeline where video starts.} xywh {525 302 78 29} color 20 minimum -32400 maximum 324000 step 1 textcolor 56
                }
              }
            }
            Fl_Group {} {
              label Playback
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Defaults
                xywh {310 71 500 312} box ROUNDED_BOX align 5
              } {
                Fl_Check_Button uiPrefsAutoPlayback {
                  label {Auto Playback}
                  tooltip {Start Playback when opening files.} xywh {497 113 25 25} box UP_BOX down_box DOWN_BOX align 4
                }
                Fl_Check_Button uiPrefsSingleClickPlayback {
                  label {Single Click Playback}
                  tooltip {Start Playback when single clicking the left mouse button on the view window} xywh {701 113 25 25} box UP_BOX down_box DOWN_BOX align 4
                }
                Fl_Choice uiPrefsAutoHidePixelBar {
                  label {Auto Hide Pixel Bar} open
                  xywh {640 77 144 28} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Inactive
                    xywh {0 0 100 20}
                  }
                  MenuItem {} {
                    label {OpenGL only}
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label {Vulkan and OpenGL}
                    xywh {20 20 100 20}
                  }
                }
                Fl_Group {} {
                  xywh {334 146 450 132} box ROUNDED_BOX
                } {
                  Fl_Group {} {
                    label Sequences open
                    xywh {344 169 420 64} box ROUNDED_FRAME color 35
                  } {
                    Fl_Group {} {open
                      xywh {429 179 270 42}
                    } {
                      Fl_Value_Input uiPrefsFPS {
                        label Speed
                        tooltip {Frames Per Second value for sequences that don't have embedded speed.} xywh {519 186 80 25} color 20 selection_color 0 minimum 1 maximum 240 step 1 value 24 textcolor 56
                      }
                      Fl_Menu_Button {} {
                        label FPS
                        user_data this user_data_type {PreferencesUI*}
                        callback {int idx = o->value();
const char* t = o->text(idx);
float g = (float) atof( t );
v->uiPrefsFPS->value( g );}
                        xywh {601 186 75 25}
                        code0 {o->disable_label();}
                        class {mrv::PopupMenu}
                      } {
                        MenuItem {} {
                          label 60
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label {59.94}
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label 50
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label 30
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label {29.97}
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label 25
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label 24
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label {14.985}
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label {12.5}
                          xywh {10 10 100 20}
                        }
                        MenuItem {} {
                          label 12
                          xywh {10 10 100 20}
                        }
                      }
                    }
                  }
                  Fl_Choice uiPrefsLoopMode {
                    label {Looping Mode}
                    tooltip {Select default looping mode in timeline.} xywh {539 241 90 28} box THIN_DOWN_BOX down_box BORDER_BOX
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label Loop
                      xywh {10 10 100 20}
                    }
                    MenuItem {} {
                      label Stop
                      xywh {10 10 100 20}
                    }
                    MenuItem {} {
                      label {Ping Pong}
                      xywh {10 10 100 20}
                    }
                  }
                }
                Fl_Group {} {
                  label Scrub open
                  xywh {334 301 452 72} box ROUNDED_BOX
                } {
                  Fl_Value_Input uiPrefsScrubbingSensitivity {
                    label Sensitivity
                    tooltip {This setting controls the sensitivity of scrubbing.  Smaller values make the mouse move jump more frames while higher values does the opposite.} xywh {483 306 56 28} color 20 minimum 2 maximum 50 step 1 value 5 textcolor 56
                  }
                  Fl_Check_Button uiPrefsScrubAutoPlay {
                    label {With Audio}
                    tooltip {Start playback when scrubbing so that audio can be heard.  Scrubbing can be less smooth.} xywh {719 340 25 25} box UP_BOX down_box DOWN_BOX value 1 align 4
                  }
                  Fl_Value_Input uiPrefsAltScrubbingSensitivity {
                    label {Alt Sensitivity}
                    tooltip {When using ALT + Left Mouse Button, this setting controls the multiplier used for slowing the scrubbing.} xywh {483 338 56 28} color 20 minimum 2 maximum 50 step 1 value 3 textcolor 56
                  }
                  Fl_Choice uiPrefsScrubbingLoopMode {
                    label {Looping Mode} open
                    tooltip {Select default looping mode in timeline.} xywh {654 306 90 28} box THIN_DOWN_BOX down_box BORDER_BOX
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label Button
                      tooltip {Controls how to looping works when scrubbing.  Button makes looping work based on the Loop button in the timeline, Inactive turns off looping and Active turns on looping always.} xywh {20 20 100 20}
                    }
                    MenuItem {} {
                      label Inactive
                      xywh {30 30 100 20}
                    }
                    MenuItem {} {
                      label Active
                      xywh {20 20 100 20}
                    }
                  }
                }
              }
            }
            Fl_Group {} {
              label Edit
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label {Edit Viewport} open
                xywh {338 71 480 312} box ROUNDED_BOX
              } {
                Fl_Group {} {
                  label Display open
                  xywh {368 104 420 144} box BORDER_BOX
                } {
                  Fl_Choice uiPrefsEditView {
                    label {Default View}
                    tooltip {How to display timeline by default.} xywh {560 127 210 26} box THIN_DOWN_BOX down_box BORDER_BOX
                    code0 {o->value(0);}
                  } {
                    MenuItem {} {
                      label {Video Only}
                      xywh {45 45 100 20}
                    }
                    MenuItem {} {
                      label {Video and Audio}
                      xywh {45 45 100 20}
                    }
                  }
                  Fl_Check_Button uiPrefsShowTransitions {
                    label {Show Transitions}
                    tooltip {Show Transitions in Edit Viewport} xywh {560 166 15 20} down_box DOWN_BOX value 1 align 8
                  }
                  Fl_Check_Button uiPrefsShowMarkers {
                    label {Show Markers}
                    tooltip {Show Markers in Edit Viewport} xywh {560 195 15 20} down_box DOWN_BOX value 1 align 8
                  }
                }
                Fl_Group {} {
                  label Behavior
                  xywh {368 277 420 88} box BORDER_BOX
                } {
                  Fl_Check_Button uiPrefsEditAssociatedClips {
                    label {Edit Associated Clips}
                    tooltip {Edit Associated Clips.} xywh {563 322 214 36} down_box DOWN_BOX value 1 align 4
                  }
                  Fl_Check_Button uiPrefsTimelineEditable {
                    label Editable
                    tooltip {Editable Timeline Viewport.} xywh {563 284 214 36} down_box DOWN_BOX value 1 align 4
                  }
                }
              }
            }
            Fl_Group {} {
              label OCIO
              xywh {288 37 555 361} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label OCIO open
                xywh {305 63 520 300} box ROUNDED_BOX
              } {
                Fl_Input uiPrefsOCIOConfig {
                  label {OCIO Config File}
                  user_data main user_data_type {ViewerUI*}
                  tooltip {This is the path to your config.ocio file.  It can be set with the environment variable OCIO, which takes precedence over any saved setting.} xywh {323 182 424 31} color 20 align 1 when 11 textcolor 56
                }
                Fl_Choice {} {
                  label {Built-in Configs}
                  user_data this user_data_type {PreferencesUI*}
                  callback {const Fl_Menu_Item* item = o->mvalue();
if (!item || !item->label()) return;

const std::string entry = item->label();
if (entry == _("Default"))
{
   v->uiPrefsOCIOConfig->value("ocio://default");
}
else if (entry == _("CG"))
{
   v->uiPrefsOCIOConfig->value("ocio://cg-config-latest");
}
else if (entry == _("Studio"))
{
   v->uiPrefsOCIOConfig->value("ocio://studio-config-latest");
}}
                  xywh {477 101 119 32} down_box BORDER_BOX when 7
                } {
                  MenuItem {} {
                    label Default user_data_type {void*}
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label CG user_data_type {void*}
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label Studio user_data_type {void*}
                    xywh {0 0 100 20}
                  }
                }
                Fl_Button {} {
                  label Pick
                  user_data m user_data_type {ViewerUI*}
                  callback {PreferencesUI* uiPrefs = v->uiPrefs;
std::string r = mrv::open_ocio_config(uiPrefs->uiPrefsOCIOConfig->value());
if ( r.empty() ) return;

\#ifdef _WIN32
unsetenv( L"OCIO" );
\#else
unsetenv( "OCIO" );
\#endif
uiPrefs->uiPrefsOCIOConfig->value( r.c_str() );}
                  tooltip {Pick a config.ocio file from disk.} xywh {751 182 55 31}
                }
                Fl_Light_Button uiOCIOUseDefaultDisplayView {
                  label {Use Default Display and View}
                  tooltip {When this option is on, and your config.ocio has a default display and view, it will be used to be set as default.} xywh {421 236 288 24}
                }
                Fl_Light_Button uiOCIOUseActiveViews {
                  label {Use Active Views and Active Displays}
                  tooltip {When this option is off, OCIO files with active_views: and active_displays: are not taken into account.} xywh {421 276 288 24}
                }
              }
            }
            Fl_Group {} {
              label {OCIO Defaults}
              xywh {288 37 555 367} align 5 hide
            } {
              Fl_Group {} {
                label {OCIO Defaults}
                xywh {305 54 520 340} box ROUNDED_BOX
              } {
                Fl_Group uiOCIO_ICS {
                  label {Input Color Space} open
                  xywh {315 75 500 220} box ROUNDED_BOX
                } {
                  Fl_Group {} {open
                    xywh {363 83 411 34}
                  } {
                    Fl_Input uiOCIO_8bits_ics {
                      label {8-bits}
                      user_data this user_data_type {PreferencesUI*}
                      callback {mrv::Media::ocio_8bits_ics = o->value();}
                      tooltip {The name of the OCIO default image color space for 8 bit images (jpg, bmp, etc).} xywh {398 87 283 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                    }
                    Fl_Button {} {
                      label Pick
                      user_data this user_data_type {PreferencesUI*}
                      callback {std::string c = make_ocio_chooser(v->uiOCIO_8bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
v->uiOCIO_8bits_ics->value(c.c_str());
v->uiOCIO_8bits_ics->do_callback();}
                      xywh {686 87 88 25}
                    }
                  }
                  Fl_Group {} {open
                    xywh {371 123 403 32}
                  } {
                    Fl_Input uiOCIO_16bits_ics {
                      label {16-bits}
                      user_data this user_data_type {PreferencesUI*}
                      callback {mrv::Media::ocio_16bits_ics = o->value();}
                      tooltip {The name of the OCIO default image color space for 16-bit images (cin, tiff, etc.)} xywh {398 127 283 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                    }
                    Fl_Button {} {
                      label Pick
                      user_data this user_data_type {PreferencesUI*}
                      callback {std::string c = make_ocio_chooser(v->uiOCIO_16bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
v->uiOCIO_16bits_ics->value(c.c_str());
v->uiOCIO_16bits_ics->do_callback();}
                      xywh {686 127 88 25}
                    }
                  }
                  Fl_Group {} {open
                    xywh {371 165 403 39}
                  } {
                    Fl_Input uiOCIO_32bits_ics {
                      label {32-bits}
                      user_data this user_data_type {PreferencesUI*}
                      callback {mrv::Media::ocio_32bits_ics = o->value();}
                      tooltip {The name of the OCIO default image color space for 32-bit int images (openexr integers, etc.)} xywh {398 170 283 24} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                    }
                    Fl_Button {} {
                      label Pick
                      user_data this user_data_type {PreferencesUI*}
                      callback {std::string c = make_ocio_chooser(v->uiOCIO_32bits_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
v->uiOCIO_32bits_ics->value(c.c_str());
v->uiOCIO_32bits_ics->do_callback();}
                      xywh {686 170 88 25}
                    }
                  }
                  Fl_Group {} {open
                    xywh {368 210 406 33}
                  } {
                    Fl_Input uiOCIO_half_ics {
                      label half
                      user_data this user_data_type {PreferencesUI*}
                      callback {mrv::Media::ocio_half_ics = o->value();}
                      tooltip {The name of the OCIO default image color space for OpenEXR half images.} xywh {397 214 284 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                    }
                    Fl_Button {} {
                      label Pick
                      user_data this user_data_type {PreferencesUI*}
                      callback {std::string c = make_ocio_chooser(v->uiOCIO_half_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
v->uiOCIO_half_ics->value(c.c_str());
v->uiOCIO_half_ics->do_callback();}
                      xywh {686 214 88 25}
                    }
                  }
                  Fl_Group {} {open
                    xywh {366 253 406 33}
                  } {
                    Fl_Input uiOCIO_float_ics {
                      label float
                      user_data this user_data_type {PreferencesUI*}
                      callback {mrv::Media::ocio_float_ics = o->value();}
                      tooltip {The name of the OCIO default image color space for half and float images (OpenEXR, hdr, dpx, etc.)} xywh {395 257 284 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                    }
                    Fl_Button {} {
                      label Pick
                      user_data this user_data_type {PreferencesUI*}
                      callback {std::string c = make_ocio_chooser(v->uiOCIO_float_ics->value(), mrv::OCIOBrowser::kInputColorSpace);
v->uiOCIO_float_ics->value(c.c_str());
v->uiOCIO_float_ics->do_callback();}
                      xywh {684 257 88 25}
                    }
                  }
                }
                Fl_Group {} {open
                  xywh {311 302 480 34}
                } {
                  Fl_Input uiOCIO_Look {
                    label Look
                    user_data this user_data_type {PreferencesUI*}
                    callback {try
{
  mrv::ocio::setLook(o->value());
}
catch(const std::exception& e)
{
  o->value("");
}}
                    tooltip {Default Look} xywh {396 306 283 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                  }
                  Fl_Button {} {
                    label Pick
                    user_data this user_data_type {PreferencesUI*}
                    callback {std::string c = make_ocio_chooser(v->uiOCIO_Look->value(), mrv::OCIOBrowser::kLook);
v->uiOCIO_Look->value(c.c_str());
v->uiOCIO_Look->do_callback();}
                    xywh {684 306 88 25}
                  }
                }
                Fl_Group {} {open
                  xywh {305 341 500 35}
                } {
                  Fl_Input uiOCIO_Display_View {
                    label {Display / View}
                    user_data this user_data_type {PreferencesUI*}
                    callback {try
{
  mrv::ocio::setView(o->value());
}
catch(const std::exception& e)
{
  o->value("");
}}
                    tooltip {Default Display / View} xywh {396 346 283 25} box THIN_DOWN_BOX color 20 labelsize 11 align 132 textcolor 56
                  }
                  Fl_Button {} {
                    label Pick
                    user_data this user_data_type {PreferencesUI*}
                    callback {std::string c = make_ocio_chooser(v->uiOCIO_Display_View->value(), mrv::OCIOBrowser::kDisplay_And_View);
v->uiOCIO_Display_View->value(c.c_str());
v->uiOCIO_Display_View->do_callback();}
                    xywh {684 346 88 25}
                  }
                }
              }
            }
            Fl_Group {} {
              label Loading
              xywh {288 38 555 360} align 5 hide
            } {
              Fl_Group {} {open
                xywh {324 141 488 180}
              } {
                Fl_Input uiPrefsVersionRegex {
                  label {Version Regex}
                  tooltip {Regular Expression used to match clip versions.  Must group three things (prefix, number and suffix). If left on its default value (_v), it will automatically be created a regular expression to match versions defined with _v in the name of the file, directory or both. For example: gizmo_v001.0001.exr} xywh {443 165 345 30} color 20 textcolor 56
                  code0 {o->value( "_v" );}
                }
                Fl_Spinner uiPrefsMaxImagesApart {
                  label {Maximum Images Apart}
                  tooltip {When searching for a version, this value is the maximum version apart from each other when searching the first or last version.} xywh {593 245 60 25} box DOWN_BOX color 20 selection_color 15 minimum 10 maximum 50 value 10 textcolor 56
                }
              }
              Fl_Group {} {open
                xywh {380 73 412 34}
              } {
                Fl_Box {} {
                  label {Missing Frame}
                  xywh {380 73 158 34}
                }
                Fl_Menu_Button uiMissingFrameType {
                  label {Black Frame}
                  xywh {545 73 247 34}
                  code0 {o->enable_glyph();}
                  class {mrv::PopupMenu}
                } {
                  MenuItem {} {
                    label {Black Frame}
                    xywh {0 0 100 20}
                  }
                  MenuItem {} {
                    label {Repeat  Frame}
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label {Scratched  Frame}
                    xywh {20 20 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label {Path Mappings}
              xywh {288 37 555 360} hide
            } {
              Fl_Browser PathMappings {
                tooltip {Use Up and Down arrows to move the selected line up and down.  Double click to change item.  Click on an empty area to unselect.} xywh {329 93 476 282} type Hold color 20 textcolor 56
                code0 {mrv::fill_path_mappings(o);}
                class {mrv::PathMappingBrowser}
              }
              Fl_Button {} {
                label {Add Paths}
                user_data PathMappings user_data_type {mrv::Browser*}
                callback {mrv::add_path_mapping(v);}
                tooltip {Add a new remote mapping.} xywh {336 50 185 36}
              }
              Fl_Button {} {
                label {Remove Paths}
                user_data PathMappings user_data_type {mrv::Browser*}
                callback {mrv::remove_path_mapping(v);}
                tooltip {Remove the currently selected path mapping.} xywh {596 50 185 36}
              }
            }
            Fl_Group {} {
              label Network
              xywh {288 37 555 360} align 5 hide
            } {
              Fl_Group {} {open
                xywh {320 37 503 360}
              } {
                Fl_Box {} {
                  label Send
                  xywh {503 37 106 24}
                }
                Fl_Box {} {
                  label Accept
                  xywh {614 37 105 24}
                }
                Fl_Group {} {
                  xywh {323 61 500 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label Media
                    xywh {323 61 142 36} align 24
                  }
                  Fl_Check_Button SendMedia {
                    xywh {544 66 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveMedia {
                    xywh {659 66 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {323 111 500 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label {UI Control}
                    xywh {323 111 142 36} align 24
                  }
                  Fl_Check_Button SendUI {
                    xywh {544 116 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveUI {
                    xywh {659 116 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {323 161 500 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label {Pan and Zoom}
                    xywh {323 161 142 36} align 24
                  }
                  Fl_Check_Button SendPanAndZoom {
                    xywh {544 165 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceivePanAndZoom {
                    xywh {659 165 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {323 211 500 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label Timeline
                    xywh {323 211 142 36} align 24
                  }
                  Fl_Check_Button SendTimeline {
                    xywh {544 217 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveTimeline {
                    xywh {659 217 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {323 261 500 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label {Color Control}
                    xywh {323 261 142 36} align 24
                  }
                  Fl_Check_Button SendColor {
                    xywh {544 262 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveColor {
                    xywh {659 262 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {321 311 502 36} box UP_BOX
                } {
                  Fl_Box {} {
                    label Annotations
                    xywh {321 311 142 36} align 24
                  }
                  Fl_Check_Button SendAnnotations {
                    xywh {544 316 27 26} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveAnnotations {
                    xywh {659 316 27 26} down_box DOWN_BOX
                  }
                }
                Fl_Group {} {
                  xywh {320 361 501 36} box UP_FRAME
                } {
                  Fl_Box {} {
                    label {Audio Control}
                    xywh {321 361 142 29} align 24
                  }
                  Fl_Check_Button SendAudio {
                    xywh {544 365 27 21} down_box DOWN_BOX
                  }
                  Fl_Check_Button ReceiveAudio {
                    xywh {659 365 27 21} down_box DOWN_BOX
                  }
                }
              }
            }
            Fl_Group {} {
              label Video
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {open
                xywh {310 52 508 332}
              } {
                Fl_Choice uiPrefsOpenGLVsync {
                  label {Monitor VSync}
                  tooltip {Turns on and off Monitor's Vsync.  VSync off can display movies faster, at the cost of potential tearing in the image.} xywh {509 80 140 22} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label No
                    xywh {30 30 140 20}
                  }
                  MenuItem {} {
                    label Always
                    xywh {30 30 140 20}
                  }
                  MenuItem {} {
                    label {Presentation Mode}
                    xywh {40 40 140 20}
                  }
                }
                Fl_Choice uiPrefsColorAccuracy {
                  label {Color Buffers' Accuracy}
                  tooltip {Color Buffers can be Float, Half Float, Fast or Automatic.  Float preserves all float information, Half Float preserves most float information and Fast works in 8-bits.  Automatic selects the accuracy based on image depth.} xywh {509 120 140 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label Automatic
                    xywh {50 50 140 20}
                  }
                  MenuItem {} {
                    label {Half Float}
                    xywh {60 60 140 20}
                  }
                  MenuItem {} {
                    label {Full Float (Accurate)}
                    xywh {70 70 140 20}
                  }
                  MenuItem {} {
                    label Fast
                    xywh {50 50 140 20}
                  }
                }
                Fl_Group {} {
                  label {Main Viewport} open
                  xywh {316 183 238 72} box BORDER_BOX
                } {
                  Fl_Choice uiPrefsBlitMainViewport {
                    label Blit
                    tooltip {Viewports can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better then the other.} xywh {383 193 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label No
                      xywh {50 50 140 20}
                    }
                    MenuItem {} {
                      label Yes
                      xywh {50 50 140 20}
                    }
                  }
                  Fl_Choice uiPrefsMainViewportGPU {
                    label GPU open
                    tooltip {Viewports can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better then the other.} xywh {383 224 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label {GPU 0}
                      xywh {60 60 140 20}
                    }
                  }
                }
                Fl_Group {} {
                  label {Secondary Viewport} open
                  xywh {576 183 238 72} box BORDER_BOX
                } {
                  Fl_Choice uiPrefsBlitSecondaryViewport {
                    label Blit
                    tooltip {Viewports can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better then the other.} xywh {643 193 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label No
                      xywh {60 60 140 20}
                    }
                    MenuItem {} {
                      label Yes
                      xywh {60 60 140 20}
                    }
                  }
                  Fl_Choice uiPrefsSecondaryViewportGPU {
                    label GPU open
                    tooltip {Viewports can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better then the other.} xywh {643 224 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label {GPU 0}
                      xywh {70 70 140 20}
                    }
                  }
                }
                Fl_Group {} {
                  label Timeline open
                  xywh {437 283 239 76} box BORDER_BOX
                } {
                  Fl_Choice uiPrefsBlitTimeline {
                    label Blit
                    tooltip {Timeline can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better than the other.} xywh {507 293 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label No
                      xywh {50 50 100 20}
                    }
                    MenuItem {} {
                      label Yes
                      xywh {50 50 100 20}
                    }
                  }
                  Fl_Choice uiPrefsTimelineGPU {
                    label GPU open
                    tooltip {Viewports can be drawn with blitting or with shaders.  Depending on graphics card and OS one can perform better then the other.} xywh {508 323 140 25} down_box BORDER_BOX align 132 textcolor 32
                    class {mrv::Choice}
                  } {
                    MenuItem {} {
                      label {GPU 0}
                      xywh {80 80 140 20}
                    }
                  }
                }
              }
            }
            Fl_Group {} {
              label Audio
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {open
                xywh {326 60 478 314}
              } {
                Fl_Group {} {open
                  xywh {388 110 356 213}
                } {
                  Fl_Box {} {
                    label {For changes to take effect, you will need to re-open any movies already playing or reload mrv2.}
                    xywh {388 110 356 64} box THIN_UP_FRAME align 128
                  }
                  Fl_Choice uiPrefsAudioAPI {
                    label API
                    user_data this user_data_type {PreferencesUI*}
                    callback {fill_audio_output_devices(v);} open
                    tooltip {Audio API to use for platforms that support multiple APIs (Linux only)} xywh {388 225 356 22} down_box BORDER_BOX align 132 when 5 textcolor 32
                    code0 {fill_audio_apis(o);}
                    code1 {o->value(0);}
                    class {mrv::Choice}
                  } {}
                  Fl_Choice uiPrefsAudioOutputDevice {
                    label {Output Device} open
                    tooltip {Output Device to use for audio playback.} xywh {388 298 356 24} down_box BORDER_BOX align 132 textcolor 32
                    code0 {fill_audio_output_devices(this);}
                    code1 {o->value(0);}
                    class {mrv::Choice}
                  } {}
                }
              }
            }
            Fl_Group {} {
              label {Voice Annotations} open
              tooltip {Voice Annotation Preferences.} xywh {298 47 555 361} box EMBOSSED_BOX align 5
            } {
              Fl_Group {} {
                label {Voice Annotations} open
                xywh {314 72 520 300} box ROUNDED_BOX
              } {
                Fl_Input uiPrefsVoiceOverPath {
                  label {Save Path}
                  user_data main user_data_type {ViewerUI*}
                  tooltip {This is the path to your config.ocio file.  It can be set with the environment variable OCIO, which takes precedence over any saved setting.} xywh {332 114 424 31} color 20 align 1 when 11 textcolor 56
                }
                Fl_Button {} {
                  label Pick
                  user_data m user_data_type {ViewerUI*}
                  callback {PreferencesUI* uiPrefs = v->uiPrefs;
std::string r = mrv::open_directory(uiPrefs->uiPrefsVoiceOverPath->value());
if ( r.empty() ) return;

uiPrefs->uiPrefsVoiceOverPath->value( r.c_str() );} selected
                  tooltip {Pick a directory from disk to save voice overs..} xywh {760 114 55 31}
                }
                Fl_Choice uiPrefsVoiceOverSpeed {
                  label {Playback Speed}
                  xywh {476 182 100 32} down_box BORDER_BOX
                } {
                  MenuItem {} {
                    label Normal
                    xywh {0 0 100 20}
                  }
                  MenuItem {} {
                    label {X 2}
                    xywh {0 0 100 20}
                  }
                  MenuItem {} {
                    label {X 3}
                    xywh {10 10 100 20}
                  }
                  MenuItem {} {
                    label {X 4}
                    xywh {20 20 100 20}
                  }
                }
                Fl_Choice uiPrefsVoiceOverMicrophone {
                  label Microphone open
                  xywh {478 222 310 32} down_box BORDER_BOX
                  code0 {fill_audio_input_devices(this);}
                } {}
                Fl_Value_Slider uiPrefsVoiceOverVolume {
                  label Volume
                  xywh {476 262 174 28} type {Horz Knob} align 4 minimum 30 maximum 120 step 1 value 100 textsize 14
                }
              }
            }
            Fl_Group {} {
              label ComfyUI
              tooltip {Here are the current settings to interact with ComfyUI.  It requires installation of mrv2's comfyUI nodes.} xywh {298 47 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {open
                xywh {352 70 446 313}
              } {
                Fl_Choice uiPrefsUseComfyUIPipe {
                  label {Use ComfyUI Pipe} open
                  tooltip {This setting opens a pipe to communicate with ComfyUI's mrv2_save_exr_node.py} xywh {497 182 255 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label No
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label Yes
                    xywh {40 40 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label Errors
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {open
                xywh {341 41 446 313}
              } {
                Fl_Choice uiPrefsRaiseLogWindowOnFFmpegError {
                  label {On FFmpeg Error} open
                  tooltip {Adjusts how Log Window behaves in case of an FFmpeg error.} xywh {493 130 255 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label {Do Nothing}
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label {Open Logs on Dock}
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label {Open Logs on Window}
                    xywh {40 40 100 20}
                  }
                }
                Fl_Choice uiPrefsRaiseLogWindowOnError {
                  label {On Error} open
                  tooltip {Adjusts how Log Window behaves in case of error.} xywh {493 175 255 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label {Do Nothing}
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label {Open Logs on Dock}
                    xywh {20 20 100 20}
                  }
                  MenuItem {} {
                    label {Open Logs on Window}
                    xywh {30 30 100 20}
                  }
                }
              }
            }
            Fl_Group {} {
              label Behavior
              xywh {288 37 555 360} box EMBOSSED_BOX align 5 hide
            } {
              Fl_Group {} {
                label Behavior open
                xywh {321 115 460 141} box ROUNDED_BOX
              } {
                Fl_Choice uiPrefsCheckForUpdates {
                  label {Check for Updates}
                  tooltip {Allows you to automatically download updates of mrv2 when it starts up.} xywh {487 143 255 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label {On Demand From Help Menu}
                    xywh {30 30 100 20}
                  }
                  MenuItem {} {
                    label {At Start Up}
                    xywh {30 30 100 20}
                  }
                }
                Fl_Choice uiPrefsAllowScreenSaver {
                  label {Allow Screen Saver} open
                  tooltip {This setting controls whether mrv2 will block the screen saver when running.} xywh {487 192 255 25} down_box BORDER_BOX align 132 textcolor 32
                  class {mrv::Choice}
                } {
                  MenuItem {} {
                    label Inactive
                    xywh {40 40 100 20}
                  }
                  MenuItem {} {
                    label Active
                    xywh {40 40 100 20}
                  }
                }
              }
            }
          }
          Fl_Group {} {
            xywh {320 412 470 44}
          } {
            Fl_Button {} {
              label Default
              user_data this user_data_type {PreferencesUI*}
              callback {int ok = fl_choice(
_("This will reset all your preferences" 
  " to their default values.  "
  "Are you sure you want to continue?"),
  _("Yes"), _("No"), NULL, NULL);
if (ok)
    return;
                        
// reset and reload preferences
mrv::Preferences::reset();
mrv::Preferences::load(false, false);}
              tooltip {Reset settings to the default.} xywh {333 418 132 31}
            }
            Fl_Button {} {
              label Revert
              user_data this user_data_type {PreferencesUI*}
              callback {// reload preferences
mrv::Preferences::load(false, false);}
              tooltip {Revert settings to last saved preferences.} xywh {489 418 132 31}
            }
            Fl_Button {} {
              label OK
              user_data m user_data_type {ViewerUI*}
              callback {v->uiPrefs->uiMain->hide();
mrv::Preferences::run();}
              tooltip {Accept settings but don't save.  They will get saved when exiting the program.} xywh {648 418 132 31}
            }
          }
        }
        Fl_Group {} {open
          xywh {9 0 270 447} box PLASTIC_UP_BOX
        } {
          Fl_Tree uiPrefsTree {
            label Module
            user_data this user_data_type {PreferencesUI*}
            callback {Fl_Tree_Item* selected = o->callback_item();
if ( !selected || !selected->label() ) return;

Fl_Wizard* wiz = v->uiWizard;
Fl_Tree* tree = v->uiPrefsTree;

int idx = 0;
for (Fl_Tree_Item* item = tree->first(); item; item = tree->next(item), ++idx)
{
      if (item == selected)
      {
         Fl_Widget* w = wiz->child(idx-1);  // 0 in tree is ROOT
         wiz->value(w);
         return;
      }
}}
            xywh {9 24 270 423} color 20 when 4
            code0 {fill_tree(o);}
            code1 {o->showroot(false);}
            class {mrv::PreferencesTree}
          }
        }
      }
    }
  }
  Function {PreferencesUI(ViewerUI* m)} {} {
    code {make_window(m);} {}
  }
  Function {~PreferencesUI()} {} {
    code {delete uiMain; uiMain = NULL;} {}
  }
  Function {fill_tree(mrv::PreferencesTree* o)} {open
  } {
    code {Fl_Tree_Item* item = o->add( _("User Interface") );
o->add( _("User Interface/View Window") );
o->add( _("User Interface/File Requester") );
o->add( _("User Interface/Fonts") );
o->add( _("User Interface/HDR") );
o->add( _("User Interface/Language and Colors") );
o->add( _("User Interface/Pixel Toolbar") );
o->add( _("User Interface/Positioning") );
o->add( _("User Interface/Render") );;
o->add( _("User Interface/Thumbnails") );
o->add( _("User Interface/Timeline") );
o->add( _("Playback") );
o->add( _("Edit") );
o->add( _("OCIO") );
o->add( _("OCIO Defaults") );
o->add( _("Loading") );
o->add( _("Path Mappings") );
o->add( _("Network") );
o->add( _("Video") );
o->add( _("Audio") );
o->add( _("Voice Annotations") );
o->add( _("ComfyUI") );
o->add( _("Errors") );
o->add( _("Behavior") );
o->select( item );} {}
  }
  Function {fill_audio_apis(Fl_Choice* o)} {} {
    code {o->clear();

\#ifdef TLRENDER_AUDIO

    std::vector<RtAudio::Api> apis;
    RtAudio::getCompiledApi(apis);
    
    if (apis.empty())
    {    
         o->add(_("No Audio was Compiled"));
         return;
    }
   
   
    std::vector<RtAudio::Api> validApis;
    for (auto api : apis)
    {
    	RtAudio audio(api);
    	if (audio.getDeviceCount() > 0)
    	    validApis.push_back(api);	
    }    
    
    if (validApis.empty())
    {    
         o->add(_("No Audio Devices were Found"));
         return;
    }
   
    auto name = RtAudio::getApiName(validApis[0]);
    
    std::string apiDefault = _("Default API");
    apiDefault += " (";
    apiDefault += name;
    apiDefault += ")";
    
    o->add(apiDefault.c_str());

    for (auto& api : validApis)
    {
        auto name = RtAudio::getApiName(api);
        o->add(name.c_str());
    }

\#else
    o->add(_("No Audio was Compiled"));
\#endif} {}
  }
  Function {fill_audio_output_devices(PreferencesUI* self)} {open
  } {
    code {auto v = self->uiPrefsAudioAPI;
auto o = self->uiPrefsAudioOutputDevice;
int oldDevice = o->value();
std::string oldDeviceName;

if (oldDevice >= 0)
{
    const Fl_Menu_Item* item = v->child(oldDevice);
    if (item && item->label())
    {
        oldDeviceName = item->label();
    }
}

o->clear();

\#ifdef TLRENDER_AUDIO

int value = v->value();
const Fl_Menu_Item* item = v->child(value);

std::string apiName;
if (item && item->label())
{
    apiName = item->label();
}

   
RtAudio::Api api = RtAudio::getCompiledApiByName(apiName);

RtAudio audio(api);

RtAudio::Api realApi = audio.getCurrentApi();

const auto numDevices = audio.getDeviceCount();
if (numDevices <= 0)
{
    o->add(_("No Valid Devices found" ));
    o->value(0);
    return;
}


const auto deviceDefault = audio.getDefaultOutputDevice();
const auto& info = audio.getDeviceInfo(deviceDefault);
const auto& deviceName = mrv::string::commentSlash(info.name);

oldDevice = 0;

std::string name = _("Default Device");
name += " (";
name += deviceName;
name += ")";
o->add(name.c_str());
for (size_t i = 0; i < numDevices - 1; ++i)
{
   const auto& deviceInfo = audio.getDeviceInfo(i);
\#ifndef RTAUDIO_VERSION_MAJOR
   if (!deviceInfo.probed) continue;
\#endif
   
   unsigned numOutput = deviceInfo.outputChannels;
   unsigned numDuplex = deviceInfo.duplexChannels;
   if (numOutput == 0 && numDuplex == 0)
      continue;  // a microphone or similar
      
   name = mrv::string::commentSlash(deviceInfo.name);
   o->add(name.c_str());
   if (name == oldDeviceName)
   {
      oldDevice = i + 1;
   }
}

o->value(oldDevice);

\#else

o->add(_("No Valid Devices found" ));
o->value(0);

\#endif} {}
  }
  Function {fill_audio_input_devices(PreferencesUI* self)} {open
  } {
    code {auto v = self->uiPrefsAudioAPI;
auto o = self->uiPrefsVoiceOverMicrophone;

int oldDevice = o->value();
std::string oldDeviceName;

if (oldDevice >= 0)
{
    const Fl_Menu_Item* item = v->child(oldDevice);
    if (item && item->label())
    {
        oldDeviceName = item->label();
    }
}


o->clear();

\#ifdef TLRENDER_AUDIO

int value = v->value();
const Fl_Menu_Item* item = v->child(value);

std::string apiName;
if (item && item->label())
{
    apiName = item->label();
}

   
RtAudio::Api api = RtAudio::getCompiledApiByName(apiName);

RtAudio audio(api);

RtAudio::Api realApi = audio.getCurrentApi();

const auto numDevices = audio.getDeviceCount();
if (numDevices <= 0)
{
    o->add(_("No Valid Devices found" ));
    o->value(0);
    return;
}


const auto deviceDefault = audio.getDefaultInputDevice();
const auto& info = audio.getDeviceInfo(deviceDefault);
const auto& deviceName = mrv::string::commentSlash(info.name);

oldDevice = 0;

std::string name = _("Default Device");
name += " (";
name += deviceName;
name += ")";
o->add(name.c_str());
for (size_t i = 0; i < numDevices - 1; ++i)
{
   const auto& deviceInfo = audio.getDeviceInfo(i);
\#ifndef RTAUDIO_VERSION_MAJOR
   if (!deviceInfo.probed) continue;
\#endif
   
   unsigned numInput = deviceInfo.inputChannels;
   unsigned numDuplex = deviceInfo.duplexChannels;
   if (numInput == 0 && numDuplex == 0)
      continue;  // a microphone or similar
      
   name = mrv::string::commentSlash(deviceInfo.name);
   o->add(name.c_str());
   if (name == oldDeviceName)
   {
      oldDevice = i + 1;
   }
}

o->value(oldDevice);

\#else

o->add(_("No Valid Devices found" ));
o->value(0);

\#endif} {}
  }
}

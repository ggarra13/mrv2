# data file for the Fltk User Interface Designer (fluid)
version 1.0500
i18n_type 1
i18n_include {<libintl.h>}
i18n_conditional {}
i18n_gnu_function gettext
i18n_gnu_static_function gettext_noop
header_name {.h}
code_name {.cxx}
include_guard {}
decl {\#include "mrvCore/mrvBackend.h"} {public global
}

decl {\#ifdef VULKAN_BACKEND
\#  include "mrvVk/mrvVkShape.h"
\#endif

\#ifdef OPENGL_BACKEND
\#  include "mrvGL/mrvGLShape.h"
\#endif} {public global
}

decl {\#include "mrvFl/mrvFileRequester.h"} {public global
}

class URLLinkUI {open
} {
  decl {bool cancel = false;} {public local
  }
  Function {make_window()} {open
  } {
    Fl_Window uiMain {
      label {Link Annotation} open
      xywh {0 0 774 200} type Double modal visible
    } {
      Fl_Input uiTitle {
        label Title
        tooltip {Enter a URL or choose an image file.} xywh {130 35 550 36} color 20 textcolor 56
      }
      Fl_Group {} {open
        xywh {130 77 640 45}
      } {
        Fl_Input uiURL {
          label {File / URL}
          tooltip {Enter a URL or choose an image file.} xywh {130 80 550 36} color 20 textcolor 56
        }
        Fl_Menu_Button {} {
          label Pick
          user_data uiURL user_data_type {Fl_Input*}
          callback {int type = o->value();

std::vector<std::string> files;

if (type == 0)
{
	files = mrv::open_image_file(v->value(), false);
}
else if (type == 1)
{
        std::string dir = mrv::open_directory(v->value());
}

if ( files.empty() ) return;

v->value( files[0].c_str() );} open
          xywh {684 84 84 32}
        } {
          MenuItem {} {
            label File
            xywh {0 0 100 20}
          }
          MenuItem {} {
            label Directory
            xywh {10 10 100 20}
          }
        }
      }
      Fl_Group {} {open
        xywh {197 144 416 40}
      } {
        Fl_Button {} {
          label OK
          user_data uiMain user_data_type {Fl_Double_Window*}
          callback {v->hide();}
          xywh {491 144 122 40}
        }
        Fl_Button {} {
          label Cancel
          user_data uiMain user_data_type {Fl_Double_Window*}
          callback {cancel = true;
v->hide();}
          xywh {197 144 122 40}
        }
      }
    }
  }
  Function {URLLinkUI(tl::draw::Shape* shape)} {open
  } {
    code {using namespace mrv;

auto w = make_window();

\#ifdef VULKAN_BACKEND
   VKLinkShape* s = dynamic_cast<VKLinkShape*>(shape);
\#endif
\#ifdef OPENGL_BACKEND
   GLLinkShape* s = dynamic_cast<GLLinkShape*>(shape);
\#endif

if (!s) return;

uiURL->value(s->url.c_str());
uiTitle->value(s->title.c_str());

w->show();
while (w->visible())
{
  Fl::check();
}} {}
  }
}

#!/bin/bash

# Remove old symlinks just in case
rm -f /usr/bin/mrv2
rm -f /usr/bin/hdr

#
# Some variables
#
has_hdr=0

#
# Add mrv2 to path
#
startup="@CPACK_INSTALL_PREFIX@/bin/mrv2.sh"

#
# Make sure script is executable
#
chmod a+x "$startup"

echo "Creating symlink from $startup to /usr/bin/@mrv2_NAME@"
ln -s "$startup" /usr/bin/@mrv2_NAME@
echo "Creating symlink from $startup to /usr/bin/@mrv2_NAME@-v@mrv2_VERSION@"
ln -s "$startup" /usr/bin/@mrv2_NAME@-v@mrv2_VERSION@

startup="@CPACK_INSTALL_PREFIX@/bin/hdr.sh"
if [[ -e $startup ]]; then
    #
    # Make sure script is executable
    #
    has_hdr=1
    
    chmod a+x "$startup"
    
    echo "Creating symlink from $startup to /usr/bin/hdr"
    rm -f /usr/bin/hdr
    ln -s "$startup" /usr/bin/hdr
    echo "Creating symlink from $startup to /usr/bin/hdr-v@mrv2_VERSION@"
    rm -f /usr/bin/hdr-v@mrv2_VERSION@
    ln -s "$startup" /usr/bin/hdr-v@mrv2_VERSION@
fi


#
# Install Desktop icon
#

name=`logname`
if [[ -z "$name" ]]; then
    name=$LOGNAME
fi

# First, check if user-dirs.dirs exists in user's config directory
config=.config
desktop_dir=/home/${name}/.config/
file=${desktop_dir}/user-dirs.dirs

# if it does, copy it to root .config directory
if [[ -e $file ]]; then
    if [ ! -d /root/.config ]; then
       mkdir /root/.config
    fi
    cp $file /root/.config
fi

# Now, as root, get DESKTOP directory
fulldir=$(xdg-user-dir DESKTOP)
desktop_dir=${fulldir#/root/}

# If fulldir had /root/ in it, then rearrange to copy to /home/user directory
if [[ $fulldir != $desktop_dir ]]; then
    desktop_dir=/home/${name}/${desktop_dir}
fi

# Just in case.  If /home/user/DESKTOP directory is missing, create it.
if [[ ! -d $desktop_dir ]]; then
    mkdir $desktop_dir
fi

#
# Copy icon to applications directory
#
INSTALL_DIR=/usr/local/@mrv2ShortName@/
sharedir=$INSTALL_DIR/share

#
# Copy desktop, icon and locale translations
#
appdir=${sharedir}/applications

cp -rf ${sharedir}/* /usr/share/

#
# Copy the .png icons following Freedesktop.org
#
ICON_SIZES='16 32 48 64 128 256'
for i in $ICON_SIZES; do
    echo "   Installing icon size ${i}x${i}"
    cp ${sharedir}/icons/hicolor/${i}x${i}/apps/mrv2.png /usr/share/icons/hicolor/${i}x${i}/apps/@mrv2_NAME@-v@mrv2_VERSION@.png
    cp ${sharedir}/icons/hicolor/${i}x${i}/apps/mrv2.png /usr/share/icons/hicolor/${i}x${i}/apps/@mrv2_NAME@.png
    if [[ $has_hdr == 1 ]]; then
	cp ${sharedir}/icons/hicolor/${i}x${i}/apps/hdr.png /usr/share/icons/hicolor/${i}x${i}/apps/hdr-v@mrv2_VERSION@.png
	cp ${sharedir}/icons/hicolor/${i}x${i}/apps/hdr.png /usr/share/icons/hicolor/${i}x${i}/apps/hdr.png
    fi
done

copy_desktop_shortcut()
{
    local shortcut=$1
    
    appshortcut="${appdir}/${shortcut}"
    desktop_shortcut="${desktop_dir}/${shortcut}"

    #
    # Copy shortcut to desktop
    #
    cp -f "${appshortcut}" "${desktop_dir}"

    #
    # Change owner of shortcut to user
    #
    chown ${name} "${desktop_shortcut}"
    
    #
    # Make it executable
    #
    chmod a+x "${desktop_shortcut}"
}

#
# Copy versioned shortcut to applications and desktop
#
shortcut="@mrv2_NAME@-v@mrv2_VERSION@.desktop"
copy_desktop_shortcut $shortcut

if [[ -e /usr/bin/hdr-v@mrv2_VERSION@ ]]; then
    shortcut="hdr-v@mrv2_VERSION@.desktop"
    copy_desktop_shortcut $shortcut
fi

#
# Copy unversioned shortcut for Wayland to applications
#
if [[ -e /usr/bin/hdr-v@mrv2_VERSION@ ]]; then
    shortcut="hdr.desktop"
    appshortcut="${appdir}/${shortcut}"
    cp -f "${appshortcut}" /usr/share/applications
fi

shortcut="mrv2.desktop"
appshortcut="${appdir}/${shortcut}"
cp -f "${appshortcut}" /usr/share/applications


#
# Associate Video formats
#
xdg-mime default "${appshortcut}" video/mp4 video/mpeg video/quicktime video/x-flv video/x-matroska video/x-ms-wmv video/x-msvideo image/x-avi video/x-otio video/x-usd video/x-usda video/x-usdc video/x-usdz

#
# Associate Image formats
#
xdg-mime default "${appshortcut}" image/x-cin image/x-dpx image/jpeg image/png image/x-tiff image/x-tga image/x-exr image/x-sxr

echo "Updating desktop database..."
update-desktop-database

echo "Updating mime database..."
update-mime-database /usr/share/mime

#
# Deal with libselinux-so.1
#

# Common locations to search for libselinux.so.1
LIB_PATHS=(
    "/lib/x86_64-linux-gnu"  # Ubuntu, Debian
    "/usr/lib/x86_64-linux-gnu"  # Ubuntu, Debian (additional)
    "/lib64"                 # RHEL, Rocky, Fedora, CentOS
    "/usr/lib64"            # RHEL, Rocky, Fedora, CentOS (additional)
    "/usr/lib"              # Generic fallback
    "/lib"                  # Generic fallback
)

# Variable to track if library is found
FOUND=0
LIB_SOURCE=""

# Search for libselinux.so.1 in common paths
echo "Searching for libselinux.so.1..."
for path in "${LIB_PATHS[@]}"; do
    if [ -f "$path/libselinux.so.1" ]; then
        echo "Found libselinux.so.1 at $path/libselinux.so.1"
        LIB_SOURCE="$path/libselinux.so.1"
        FOUND=1
        break
    fi
done

# If not found in standard paths, try using ldconfig
if [ $FOUND -eq 0 ]; then
    echo "Not found in standard paths. Searching with ldconfig..."
    LIB_SOURCE=$(ldconfig -p | grep "libselinux.so.1" | head -n 1 | awk '{print $NF}')
    if [ -n "$LIB_SOURCE" ] && [ -f "$LIB_SOURCE" ]; then
        echo "Found libselinux.so.1 at $LIB_SOURCE via ldconfig"
        FOUND=1
    fi
fi

# Handle case where library is not found
if [ $FOUND -eq 0 ]; then
    echo "Error: libselinux.so.1 not found on this system."
    echo "You may need to install it (e.g., 'sudo apt install libselinux1' on Ubuntu/Debian or 'sudo dnf install libselinux' on RHEL/Rocky).  Installation will use bundled libselinux.so.1"
fi

# Copy the library to the target directory
LIB_TARGET_DIR=$INSTALL_DIR/lib
echo "Copying system $LIB_SOURCE to $LIB_TARGET_DIR"
cp "$LIB_SOURCE" "$LIB_TARGET_DIR/"
if [ $? -ne 0 ]; then
    echo "Error: Failed to copy $LIB_SOURCE to $LIB_TARGET_DIR. Check permissions."
    exit 1
fi

# Verify the copy
if [ -f "$LIB_TARGET_DIR/libselinux.so.1" ]; then
    echo "Successfully installed libselinux.so.1 to $LIB_TARGET_DIR/libselinux.so.1"
else
    echo "Error: Copy appears to have failed. File not found at $LIB_TARGET_DIR/libselinux.so.1"
    exit 1
fi

#
# Optional: Set permissions (ensure it's readable/executable)
#
chmod 755 "$LIB_TARGET_DIR/libselinux.so.1"
